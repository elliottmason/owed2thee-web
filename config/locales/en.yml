en:
  app:
    concepts:
      absolution: absolution
      cancellation: cancellation
      confirmation: confirmation
      debt: debt
      dispute: dispute
      loan: loan
      loan_request: 'loan request'
      password: password
      payment: payment
      user: user
    default_display_name:
      string: 'an %{title} %{user}'
      title: :app.title
      user: :app.concepts.user
    errors:
      creation: 'There was a problem saving your %{creatable}'
    notices:
      cancellation:
        actor: :app.pronouns.you
        string: "%{actor} canceled %{cancellable}"
      confirmation:
        actor: :app.pronouns.you
        string: '%{actor} confirmed %{confirmable}'
      creation: 'Your %{creatable} has been saved'
      dispute: 'Your dispute against %{disputable} has been submitted'
      failure: 'Your %{creatable} could not be saved'
    pronouns:
      you: you
    verbs:
      absolve: 'mark as paid'
      cancel: cancel
      confirm: confirm
      dispute: dispute
      pay: pay
      submit: submit
    states:
      canceled: canceled
      confirmed: confirmed
      disputed: disputed
      paid: paid
      submitted: submitted
    title: Owed2Thee

  email_addresses:
    notices:
      confirmation:
        confirmable: 'your email address: %{email_address}'
        string: :app.notices.confirmation

  loan_requests:
    errors:
      creation:
        creatable: :loan_requests.name
        string: :app.errors.creation
    name: :app.concepts.loan_request
    notices:
      creation:
        creatable: :loan_requests.name
        string: :app.notices.creation

  loans:
    descriptions:
      full:
        string: '%{without_amount} for %{amount_lent}'
        without_amount: :loans.descriptions.without_amount
      without_amount: '%{lender} loan to %{borrower}'
      without_borrowers: '%{lender} loan for %{amount_lent}'
      without_lenders: 'loan to %{borrower} for %{amount_lent}'
      without_obligors: 'loan for %{amount_lent}'
    errors:
      amount:
        nonpositive: :transfers.errors.amount.nonpositive
      identical_participants:
        record: :loans.name
        string: :transfers.errors.identical_participants
    name: :app.concepts.loan
    notices:
      cancellation:
        cancellable: :loans.descriptions.full
        string: :app.notices.cancellation
      confirmation:
        confirmable: :loans.descriptions.without_amount
        string: :app.notices.confirmation
      creation:
        creatable: :app.concepts.loan
        string: :app.notices.creation
      dispute:
        disputable: :loans.descriptions.without_borrowers
        string: :app.notices.dispute
      failure:
        creatable: :app.concepts.loan
        string: :app.notices.failure

    # Rails scopes
    show:
      absolve_button: :app.verbs.absolve
      cancel_button: :app.verbs.cancel
      confirm_button: :app.verbs.confirm
      dispute_button: :app.verbs.dispute
      pay_button: 'Mark as Paid'
      publish_button: :app.verbs.confirm

  passwords:
    errors:
      current_password:
        incorrect: is incorrect.
    name: :app.concepts.password
    notices:
      update_failure: 'Your new password could not be accepted. You should try again.'
      update_success: 'Your new password has been set and is now active.'

  payments:
    descriptions:
      full:
        payment: :payments.descriptions.without_payer
        string: '%{payer} %{payment}'
      short: '%{amount_paid} payment'
      without_payee:
        payment: :payments.descriptions.short
        string: '%{payer} %{payment}'
      without_payer:
        payment: :payments.descriptions.short
        string: '%{payment} to %{payee}'
    errors:
      amount:
        nonpositive: :transfers.errors.amount.nonpositive
    name: :app.concepts.payment
    notices:
      confirmation:
        confirmable: :payments.descriptions.full
        string: :app.notices.confirmation

    # payments Rails scopes
    show:
      confirm_button: :app.verbs.confirm
      publish_button: :app.verbs.confirm

  transfers:
    errors:
      amount:
        nonpositive: must be larger than $0.00
      identical_participants: "you cannot create a %{record} with yourself"

  # Rails scopes
  errors:
    attributes:
      amount:
        greater_than: :transfers.errors.amount.nonpositive

  # scoped for PublicActivity
  activity:
    loan:
      canceled:
        cancellable: :loans.descriptions.full
        string: :loans.notices.cancellation
      confirmed:
        confirmable: :loans.descriptions.full
        string: :loans.notices.confirmation
      created:
        loan: :loans.descriptions.without_lenders
        string: "%{actor} submitted a %{loan}"
      disputed:
        loan: :loans.descriptions.without_borrowers
        string: '%{actor} disputed %{loan}'
    payment:
      confirmed:
        confirmable: :payments.descriptions.without_payee
        string: :payments.notices.confirmation
      created:
        payment: :payments.descriptions.without_payer
        string: '%{actor} submitted a %{payment}'
      disputed:
        payment: :payments.descriptions.short
        string: '%{actor} disputed %{payer} %{payment}'
